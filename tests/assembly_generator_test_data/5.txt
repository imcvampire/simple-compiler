{ var x = false; if x then 1 else 2 }
----------------
.extern print_int
.extern print_bool
.extern read_int
.global main
.type main, @function

.section .text

main:
pushq %rbp
movq %rsp, %rbp
subq $64, %rsp

.LStart:

# LoadBoolConst(False, v0)
movq $0, -8(%rbp)

# Copy(v0, v1)
movq -8(%rbp), %rax
movq %rax, -16(%rbp)

# CondJump(v1, Label(L0), Label(L1))
cmpq $0, -16(%rbp)
jne .LL0
jmp .LL1

.LL0:

# LoadIntConst(1, v3)
movq $1, -24(%rbp)

# Copy(v3, v2)
movq -24(%rbp), %rax
movq %rax, -32(%rbp)

# Jump(Label(L2))
jmp .LL2

.LL1:

# LoadIntConst(2, v4)
movq $2, -40(%rbp)

# Copy(v4, v2)
movq -40(%rbp), %rax
movq %rax, -32(%rbp)

.LL2:

# Call(print_int, [v2], v5)
movq -32(%rbp), %rdi
call print_int
movq %rax, -56(%rbp)

# Return()
movq $0, %rax
movq %rbp, %rsp
popq %rbp
ret
